---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: httpd-pull-request
  annotations:
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: repo_name
      value: "{{ repo_name }}"
    - name: source_branch
      value: "{{ source_branch }}"
    - name: namespace
      value: demo-application
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: repo_name
      - name: source_branch
      - name: namespace
    workspaces:
      - name: source
      - name: basic-auth
    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
          kind: ClusterTask
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
          - name: subdirectory
            value: $(params.repo_name)
      - name: s2i-httpd-build
        taskRef:
          name: s2i-httpd-1-16-0
          kind: ClusterTask
        runAfter:
          - fetch-repository
        params:
        - name: PATH_CONTEXT
          value:  $(workspaces.source.path)/$(params.repo_name)
        - name: IMAGE
          value: "image-registry.openshift-image-registry.svc:5000/httpd/demo:1.0"
        - name: TLSVERIFY
          value: "false"
        workspaces:
          - name: source
            workspace: source
      - name: fetch-helm-chart-repository
        taskRef:
          name: git-clone
          kind: ClusterTask
        runAfter:
          - s2i-httpd-build
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: PARAM_DELETE_EXISTING
            value: "false"
          - name: subdirectory
            value: "shared-helm-charts"
          - name: url
            value: https://github.com/devhub-showcase/shared-helm-charts.git
          - name: revision
            value: main
      - name: install-helm-chart
        taskRef:
          name: helm-upgrade-from-source
          kind: ClusterTask
        runAfter:
          - fetch-helm-chart-repository
        workspaces:
          - name: source
            workspace: source
        params:
          - name: release_namespace
            value: $(params.namespace)
          - name: release_name
            value: $(params.repo_name)-$(params.source_branch)
          - name: charts_dir
            value: "$(workspaces.source.path)/charts/deploy"
          - name: overwrite_values
            value: image.repository=image-registry.openshift-image-registry.svc:5000/$(params.namespace)/$(params.repo_name),image.tag=$(params.source_branch)
  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  # This workspace will inject secret to help the git-clone task to be able to
  # checkout the private repositories
  - name: basic-auth
    secret:
      secretName: "{{ git_auth_secret }}"
